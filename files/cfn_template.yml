Transform: 'AWS::Serverless-2016-10-31'
Parameters:
  projectName:
    Type: String
    Description: cli variable of projectname
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9_-]*'
Metadata:
  'AWS::CloudFormation::Designer':
    99168c3d-6818-4f56-b29f-162380b8e99a:
      size:
        width: 60
        height: 60
      position:
        x: 360
        'y': 80
      z: 1
      embeds: []
      isassociatedwith:
        - f861f418-7451-4c61-85e3-3f4ff84d66cb
    5ef5d669-e5a1-4173-b779-b2ed4af35b39:
      size:
        width: 60
        height: 60
      position:
        x: 200
        'y': 90
      z: 1
      embeds: []
    50c52a7a-53c6-46cd-98bf-da4787b4568d:
      size:
        width: 60
        height: 60
      position:
        x: 30
        'y': 100
      z: 1
      embeds: []
    ff3892f4-66ba-42a9-8a2b-00ae68d7485f:
      size:
        width: 60
        height: 60
      position:
        x: 30
        'y': 170
      z: 1
      embeds: []
    f861f418-7451-4c61-85e3-3f4ff84d66cb:
      size:
        width: 60
        height: 60
      position:
        x: 470
        'y': 80
      z: 0
      embeds: []
    6a4bbb58-9b27-4185-bcd1-4968fdfef6c8:
      size:
        width: 60
        height: 60
      position:
        x: 360
        'y': 170
      z: 0
      embeds: []
    d6a51393-6865-40de-99ef-fc7a99b39746:
      size:
        width: 60
        height: 60
      position:
        x: 350
        'y': 290
      z: 0
      embeds: []
      isassociatedwith:
        - 679a9e7c-69f0-464e-8c4e-1493e6083324
        - ffe425c5-e80e-4ae4-b9d6-eb43f70305d9
        - 466232da-36cd-4088-953a-a7f46b8a47cb
    aac53e5f-9e87-4280-a7bc-9030b912511b:
      size:
        width: 60
        height: 60
      position:
        x: 250
        'y': 270
      z: 0
      embeds: []
      dependson:
        - 919716c8-4974-4ddd-a24d-f9fd2200a7f1
        - 5ef5d669-e5a1-4173-b779-b2ed4af35b39
        - d0a936ff-0386-4fe0-814d-9099607be091
    679a9e7c-69f0-464e-8c4e-1493e6083324:
      size:
        width: 60
        height: 60
      position:
        x: 500
        'y': 280
      z: 0
      embeds: []
    ffe425c5-e80e-4ae4-b9d6-eb43f70305d9:
      size:
        width: 60
        height: 60
      position:
        x: 500
        'y': 360
      z: 0
      embeds: []
    466232da-36cd-4088-953a-a7f46b8a47cb:
      size:
        width: 60
        height: 60
      position:
        x: 500
        'y': 450
      z: 0
      embeds: []
    d0a936ff-0386-4fe0-814d-9099607be091:
      size:
        width: 60
        height: 60
      position:
        x: 200
        'y': 180
      z: 0
      embeds: []
Resources:
  ApidataBucketRawjson:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Sub '${projectName}-bucket-rawjson'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 50c52a7a-53c6-46cd-98bf-da4787b4568d
  ApidataBucketCsv:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Sub '${projectName}-transform'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: ff3892f4-66ba-42a9-8a2b-00ae68d7485f
  lambdamanagedpolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: VisualEditor0
            Effect: Allow
            Action:
              - 'events:PutEvents'
              - 'lambda:ListFunctions'
              - 'lambda:InvokeFunction'
            Resource: '*'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: f861f418-7451-4c61-85e3-3f4ff84d66cb
  gluerole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: glue.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSGlueServiceRole'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 6a4bbb58-9b27-4185-bcd1-4968fdfef6c8
  MyStepFunction:
    Type: 'AWS::StepFunctions::StateMachine'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: aac53e5f-9e87-4280-a7bc-9030b912511b
    Properties:
      TracingConfiguration:
        Enabled: true
      RoleArn: !GetAtt statemachineRole.Arn
      DefinitionString: !Sub >-
        { "Comment": "A description of my state machine", "StartAt":
        "lambdagetdata", "States": { "lambdagetdata": { "Type": "Task",
        "Resource": "arn:aws:states:::lambda:invoke", "Parameters": {
        "Payload.$": "$", "FunctionName":
        "arn:aws:lambda:${AWS::Region}:{AWS::AccountId}:function:${apidatalambdagetdata}"
        }, "Retry": [ { "ErrorEquals": [ "Lambda.ServiceException",
        "Lambda.AWSLambdaException", "Lambda.SdkClientException",
        "Lambda.TooManyRequestsException" ], "IntervalSeconds": 2,
        "MaxAttempts": 6, "BackoffRate": 2 } ], "Next": "Choice",
        "TimeoutSeconds": 300, "ResultSelector": { "STATUS.$":
        "$.Payload.STATUS", "file_name.$": "$.Payload.file_name" } }, "Choice":
        { "Type": "Choice", "Choices": [ { "Variable": "$.STATUS",
        "StringEquals": "success", "Next": "Glue StartJobRun" }, { "Variable":
        "$.STATUS", "StringEquals": "failed", "Next": "Fail" } ], "Default":
        "Fail" }, "Glue StartJobRun": { "Type": "Task", "Resource":
        "arn:aws:states:::glue:startJobRun.sync", "Parameters": { "JobName":
        "${jsontocsv}", "Arguments": { "--source_bucket":
        "${projectName}-bucket-rawjson", "--target_bucket":
        "${projectName}-transform", "--file_name.$": "$.file_name" } }, "Next":
        "Success" }, "Success": { "Type": "Succeed" }, "Fail": { "Type": "Fail"
        } } }
    DependsOn:
      - apidatalambdagetdata
      - statemachineRole
      - jsontocsv
  statemachineRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: states.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - !Ref statemachineGluePolicy
        - !Ref statemachineLambdaPolicy
        - !Ref statemachineXRayAccess
    Metadata:
      'AWS::CloudFormation::Designer':
        id: d6a51393-6865-40de-99ef-fc7a99b39746
  statemachineLambdaPolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          Effect: Allow
          Action:
            - 'lambda:InvokeFunction'
          Resource: '*'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: ffe425c5-e80e-4ae4-b9d6-eb43f70305d9
  statemachineGluePolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          Effect: Allow
          Action:
            - 'glue:StartJobRun'
            - 'glue:GetJobRun'
            - 'glue:GetJobRuns'
            - 'glue:BatchStopJobRun'
          Resource: '*'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 679a9e7c-69f0-464e-8c4e-1493e6083324
  statemachineXRayAccess:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          Effect: Allow
          Action:
            - 'xray:PutTraceSegments'
            - 'xray:PutTelemetryRecords'
            - 'xray:GetSamplingRules'
            - 'xray:GetSamplingTargets'
          Resource: '*'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 466232da-36cd-4088-953a-a7f46b8a47cb
  lambdarole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: ''
            Effect: Allow
            Principal:
              Service:
                - events.amazonaws.com
                - lambda.amazonaws.com
                - apigateway.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
        - 'arn:aws:iam::aws:policy/AmazonS3FullAccess'
        - !Ref lambdamanagedpolicy
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 99168c3d-6818-4f56-b29f-162380b8e99a
    DeletionPolicy: Retain
  apidatalambdagetdata:
    Type: 'AWS::Lambda::Function'
    Properties:
      Handler: lambda_function.lambda_handler
      Runtime: python3.9
      Code:
        S3Bucket: !Sub '${projectName}-bucket-general-files'
        S3Key: api-func-deployment-package.zip
      Description: ''
      MemorySize: 128
      Timeout: 300
      Role: !GetAtt lambdarole.Arn
      Environment:
        Variables:
          raw_data_bucket: !Ref ApidataBucketRawjson
      RuntimeManagementConfig:
        UpdateRuntimeOn: Auto
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 5ef5d669-e5a1-4173-b779-b2ed4af35b39
    DependsOn:
      - ApidataBucketRawjson
      - lambdarole
  jsontocsv:
    Type: 'AWS::Glue::Job'
    Properties:
      Role: !Ref gluerole
      ExecutionProperty:
        MaxConcurrentRuns: 1
      Command:
        Name: pythonshell
        ScriptLocation: !Sub 's3://${projectName}-bucket-general-files/glujob1.py'
        PythonVersion: '3.9'
      MaxRetries: 0
      AllocatedCapacity: 0
      Timeout: 2880
      MaxCapacity: 0.0625
    Metadata:
      'AWS::CloudFormation::Designer':
        id: d0a936ff-0386-4fe0-814d-9099607be091
    DependsOn:
      - gluerole
