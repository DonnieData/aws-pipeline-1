Transform: 'AWS::Serverless-2016-10-31'
Description: This is a template to create ETL pipeline pattern with AWS Step Functions
Parameters:
  pS3BucketName:
    Type: String
    Description: Unique S3 bucket to create
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9_-]*'
  pStageFolder:
    Type: String
    Description: Folder to store staging files
    Default: stage
  pTransformFolder:
    Type: String
    Description: Folder to store transformed dataset
    Default: transform
  pArchiveFolder:
    Type: String
    Description: Folder to store archived dataset
    Default: archive
  pErrorFolder:
    Type: String
    Description: Folder to store dataset for any error
    Default: error
  pSourceFolder:
    Type: String
    Description: Source Folder to upload raw csv dataset to trigger the AWS Step functions
    Default: source
  pDatasetSchema:
    Type: String
    Description: Expected Schema for the source DatasetSchema
  pEmailforNotification:
    Description: Valid email address to send success or error notification
    Type: String
Resources:
  LambdaLayerParameter:
    Type: 'AWS::SSM::Parameter'
    Properties:
      Name: !Sub '${AWS::StackName}_lambda_layer'
      Type: String
      Value: NA
    Metadata:
      'AWS::CloudFormation::Designer':
        id: b39e4721-c7ce-46a9-ba47-3909c12c342a
  S3CustomResource:
    Type: 'Custom::S3CustomResource'
    Properties:
      ServiceToken: !GetAtt 
        - LambdaFunctionS3Object
        - Arn
      the_bucket: !Ref S3Bucket
      dirs_to_create: !Join 
        - ','
        - - !Ref pSourceFolder
          - !Ref pStageFolder
          - !Ref pErrorFolder
          - !Ref pArchiveFolder
          - !Ref pTransformFolder
      file_prefix: glue/gluejob.py
      file_content: !Sub >
        import sys

        from awsglue.transforms import *

        from awsglue.utils import getResolvedOptions

        from pyspark.context import SparkContext

        from awsglue.context import GlueContext

        from awsglue.job import Job


        args = getResolvedOptions(sys.argv, ['JOB_NAME'])


        sc = SparkContext()

        glueContext = GlueContext(sc)

        spark = glueContext.spark_session

        job = Job(glueContext)

        job.init(args['JOB_NAME'], args)

        datasource0 = glueContext.create_dynamic_frame.from_catalog(database =
        "${GlueDB}", table_name = "${pStageFolder}", transformation_ctx =
        "datasource0")

        applymapping1 = ApplyMapping.apply(frame = datasource0, mappings =
        [("date", "string", "date", "string"), ("description", "string",
        "description", "string"), ("deposits", "double", "deposits", "double"),
        ("withdrawls", "double", "withdrawls", "double"), ("balance", "double",
        "balance", "double"), ("year", "long", "year", "int"), ("month", "long",
        "month", "int"), ("day", "long", "day", "int")], transformation_ctx =
        "applymapping1")

        resolvechoice2 = ResolveChoice.apply(frame = applymapping1, choice =
        "make_struct", transformation_ctx = "resolvechoice2")


        dropnullfields3 = DropNullFields.apply(frame = resolvechoice2,
        transformation_ctx = "dropnullfields3")


        datasink4 = glueContext.write_dynamic_frame.from_options(frame =
        dropnullfields3, connection_type = "s3", format_options =
        {"compression": "snappy"}, connection_options = {"path":
        "s3://${pS3BucketName}/${pTransformFolder}","partitionKeys":["year","month","day"]},
        format = "glueparquet", transformation_ctx = "datasink4")

        job.commit()
    Metadata:
      'AWS::CloudFormation::Designer':
        id: bbbd6046-ae88-4e7a-b2df-bd92935ec35d
  StartCodeBuildProject:
    Type: 'Custom::StartCodeBuildProject'
    Properties:
      ServiceToken: !GetAtt 
        - StartCodeBuildProjectFunction
        - Arn
      Update_lambda_layer: 'yes'
    DependsOn:
      - LambdaLayerParameter
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 06484aa0-df7c-4229-a963-f19580762f69
  LambdaFunctionS3Object:
    Type: 'AWS::Serverless::Function'
    Properties:
      Layers:
        - !Ref LambdaLayer
      Description: Work with S3 Buckets!
      Handler: s3object.handler
      CodeUri: lambda
      Role: !GetAtt 
        - LambdaRole
        - Arn
      Timeout: 360
      Runtime: python3.9
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 49d00aab-19aa-4398-a297-340a626d036e
  SNSTopic:
    Type: 'AWS::SNS::Topic'
    Properties:
      KmsMasterKeyId: alias/aws/sns
      Subscription:
        - Endpoint: !Ref pEmailforNotification
          Protocol: email
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 9a53e28d-ffd3-4fe9-891e-20a40e64778e
  CodeBuildRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - !Ref BasicManagedPolicyforCodeBuild
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 196da25b-5faf-4a7b-9975-09919e0e6f36
  BasicManagedPolicyforCodeBuild:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      Description: This is sample CFN template
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: lambdalayeraccess
            Effect: Allow
            Action:
              - 'lambda:Publish*'
              - 'lambda:List*'
            Resource: !Sub >-
              arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:${AWS::StackName}-pandas-layer
          - Sid: logaccess
            Effect: Allow
            Action:
              - 'logs:CreateLogGroup'
              - 'logs:CreateLogStream'
              - 'logs:PutLogEvents'
            Resource: '*'
          - Sid: SSMPutparamater
            Effect: Allow
            Action:
              - 'ssm:PutParameter'
            Resource: !Sub >-
              arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${LambdaLayerParameter}
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 6d4d9d36-d003-4cb7-b2c6-6b29cbf45594
  CodeBuildProject:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Description: Test build to validate the resources created by CFN templates
      Source:
        Type: NO_SOURCE
        BuildSpec: |
          version: 0.2
          phases:
            build:
              commands:
                - mkdir -p build/python
                - echo "pandas==1.2.3" > requirements.txt
                - echo "numpy==1.20.2" >> requirements.txt
                - echo "s3fs==2022.10.0" >> requirements.txt
                - echo "pytz==2022.5" >> requirements.txt
                - echo "cerberus==1.3.4" >> requirements.txt
                - pip install -r requirements.txt -t ./build/python
                - cd ./build && zip -r ../temp.zip .
                - pwd
                - ls -l
                - ls -lrt
                - cd ..
                - ls -l
                - out=$(aws lambda publish-layer-version --layer-name ${LayerName} --zip-file fileb://temp.zip --compatible-runtimes python3.7 python3.8| jq .LayerVersionArn |tr -d "\"")
                - aws ssm put-parameter  --name ${SSMParameterName} --value ${out} --type "String" --overwrite
      ServiceRole: !GetAtt 
        - CodeBuildRole
        - Arn
      Artifacts:
        Type: NO_ARTIFACTS
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: 'aws/codebuild/standard:3.0'
        EnvironmentVariables:
          - Name: LayerName
            Type: PLAINTEXT
            Value: !Sub '${AWS::StackName}-pandas-layer'
          - Name: SSMParameterName
            Type: PLAINTEXT
            Value: !Ref LambdaLayerParameter
      TimeoutInMinutes: 30
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 616b600e-5020-43dc-ba46-eedceca53caa
  BasicLambdaRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
        - !Ref BasicManagedPolicyforlambda
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 346ac6a8-763f-4f9a-ac3d-de0e617b13e4
  BasicManagedPolicyforlambda:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      Description: This is sample CFN template
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: stepfunction
            Effect: Allow
            Action: 'states:*'
            Resource: !Sub '${MyStepFunction}'
          - Sid: s3listaccess
            Effect: Allow
            Action:
              - 's3:List*'
            Resource: !Sub 'arn:aws:s3:::${pS3BucketName}'
          - Sid: s3putaccess
            Effect: Allow
            Action:
              - 's3:Get*'
              - 's3:Put*'
              - 's3:Delete*'
            Resource: !Sub 'arn:aws:s3:::${pS3BucketName}/*'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 57498066-3446-4abd-af96-b433e2016528
  LambdaRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - !Ref ManagedPolicyforlambda
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: bf752319-8822-4281-b3d4-817e6d1058d5
  StepFunctionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - states.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - !Ref ManagedPolicyforstepfunction
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 6757492b-e2f7-4fc8-a318-bdfac377e26d
  ManagedPolicyforstepfunction:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      Description: This is sample CFN template
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: s3listaccess
            Effect: Allow
            Action: 'lambda:InvokeFunction'
            Resource:
              - !GetAtt 
                - ArchiveFunction
                - Arn
              - !GetAtt 
                - StartCrawlerFunction
                - Arn
              - !GetAtt 
                - CrawlerStatusCheckFunction
                - Arn
              - !GetAtt 
                - InputValidationFunction
                - Arn
          - Sid: glueaccess
            Effect: Allow
            Action:
              - 'glue:StartJobRun'
              - 'glue:GetJobRun'
              - 'glue:GetJobRuns'
              - 'glue:BatchStopJobRun'
            Resource: '*'
          - Sid: xrayaccess
            Effect: Allow
            Action:
              - 'xray:PutTraceSegments'
              - 'xray:PutTelemetryRecords'
              - 'xray:GetSamplingRules'
              - 'xray:GetSamplingTargets'
            Resource: '*'
          - Sid: snsaccess
            Effect: Allow
            Action:
              - 'sns:*'
            Resource: '*'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: d2cacdb5-8683-4839-a900-8edf1206dda7
  ManagedPolicyforlambda:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      Description: This is sample CFN template
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: codebuild
            Effect: Allow
            Action:
              - 'codebuild:StartBuild'
              - 'codebuild:BatchGet*'
              - 'codebuild:List*'
            Resource: !GetAtt 
              - CodeBuildProject
              - Arn
          - Sid: s3listaccess
            Effect: Allow
            Action:
              - 's3:List*'
            Resource: !Sub 'arn:aws:s3:::${pS3BucketName}'
          - Sid: s3putaccess
            Effect: Allow
            Action:
              - 's3:Get*'
              - 's3:Put*'
              - 's3:Delete*'
            Resource: !Sub 'arn:aws:s3:::${pS3BucketName}/*'
          - Sid: s3deletebucket
            Effect: Allow
            Action:
              - 's3:DeleteBucket'
            Resource: !Sub 'arn:aws:s3:::${pS3BucketName}'
          - Sid: SNStopicaccess
            Effect: Allow
            Action: 'sns:Publish'
            Resource: !Ref SNSTopic
          - Sid: glue
            Effect: Allow
            Action: 'glue:*'
            Resource:
              - !Sub 'arn:aws:glue:${AWS::Region}:${AWS::AccountId}:database/${GlueDB}'
              - !Sub >-
                arn:aws:glue:${AWS::Region}:${AWS::AccountId}:crawler/${CrawlPartitionedFile}
              - !Sub >-
                arn:aws:glue:${AWS::Region}:${AWS::AccountId}:crawler/${CrawlRawFile}
              - !Sub 'arn:aws:glue:${AWS::Region}:${AWS::AccountId}:table/${GlueDB}/*'
              - !Sub 'arn:aws:glue:${AWS::Region}:${AWS::AccountId}:catalog'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: d7dcc3ae-4e36-4260-80b0-82955697d4c8
  GlueDB:
    Type: 'AWS::Glue::Database'
    Properties:
      CatalogId: !Ref 'AWS::AccountId'
      DatabaseInput:
        Description: Glue Database
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 4b3489be-ced1-4395-9a2b-429eacc97834
  S3Bucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      VersioningConfiguration:
        Status: Enabled
      BucketName: !Sub '${pS3BucketName}'
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: 's3:ObjectCreated:*'
            Filter:
              S3Key:
                Rules:
                  - Name: prefix
                    Value: !Sub '${pSourceFolder}/'
                  - Name: suffix
                    Value: .csv
            Function: !GetAtt 
              - StartStepFunction
              - Arn
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Metadata:
      'AWS::CloudFormation::Designer':
        id: f26dc285-b2c4-4306-a825-ed152eeea85b
  S3InvokeLambdaPermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      SourceAccount: !Sub '${AWS::AccountId}'
      Action: 'lambda:InvokeFunction'
      FunctionName: !GetAtt 
        - StartStepFunction
        - Arn
      Principal: s3.amazonaws.com
      SourceArn: !Sub 'arn:aws:s3:::${pS3BucketName}'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 42cbb679-fff9-4ac2-b616-e391c72d68b1
  ArchiveFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      Role: !GetAtt 
        - LambdaRole
        - Arn
      Handler: move_file.lambda_handler
      CodeUri: lambda
      Runtime: python3.9
      Timeout: 30
      Environment:
        Variables:
          archive_folder_name: !Ref pArchiveFolder
          error_folder_name: !Ref pErrorFolder
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 872d7d4c-81a4-4b96-aa60-028cf0f92536
  StartStepFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      Role: !GetAtt 
        - BasicLambdaRole
        - Arn
      Handler: start_step_function.lambda_handler
      CodeUri: lambda
      Runtime: python3.9
      Timeout: 60
      Environment:
        Variables:
          STEP_FUNC_ARN: !Ref MyStepFunction
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 9649cb2b-92ac-4b69-82d7-b95ee87aaafa
  StartCrawlerFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      Role: !GetAtt 
        - LambdaRole
        - Arn
      Handler: start_crawler.lambda_handler
      CodeUri: lambda
      Runtime: python3.9
      Timeout: 60
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 37faf19a-38c3-45fe-ab3a-c2625636873a
  CrawlerStatusCheckFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      Role: !GetAtt 
        - LambdaRole
        - Arn
      Handler: check_crawler.lambda_handler
      CodeUri: lambda
      Runtime: python3.9
      Timeout: 30
      Environment:
        Variables:
          RETRYLIMIT: 200
    Metadata:
      'AWS::CloudFormation::Designer':
        id: cecea679-8bdd-4b33-aeed-86de4da5422f
  InputValidationFunction:
    Type: 'AWS::Serverless::Function'
    DependsOn:
      - StartCodeBuildProject
    Properties:
      Layers:
        - !GetAtt 
          - LambdaLayerParameter
          - Value
      Role: !GetAtt 
        - LambdaRole
        - Arn
      Handler: validation.lambda_handler
      CodeUri: lambda
      Runtime: python3.8
      Timeout: 500
      Environment:
        Variables:
          stage_folder_name: !Ref pStageFolder
          source_folder_name: !Ref pSourceFolder
          schema: !Ref pDatasetSchema
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 786c8034-5ead-4ec2-a145-f71d7b0e0783
  StartCodeBuildProjectFunction:
    Type: 'AWS::Serverless::Function'
    Description: Start Code Build project by lambda function
    Properties:
      Layers:
        - !Ref LambdaLayer
      Role: !GetAtt 
        - LambdaRole
        - Arn
      Handler: start_codebuild.lambda_handler
      CodeUri: lambda
      Runtime: python3.9
      Timeout: 500
      Environment:
        Variables:
          PROJECT_NAME: !Ref CodeBuildProject
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 3e4daeaf-f4b1-4d15-a9c5-f3ed309d83e4
  GlueRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - glue.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: s3listaccess
                Effect: Allow
                Action:
                  - 's3:List*'
                Resource: !Sub 'arn:aws:s3:::${pS3BucketName}'
              - Sid: s3putaccess
                Effect: Allow
                Action:
                  - 's3:Get*'
                  - 's3:Put*'
                  - 's3:Delete*'
                Resource: !Sub 'arn:aws:s3:::${pS3BucketName}/*'
              - Sid: glue
                Effect: Allow
                Action: 'glue:*'
                Resource:
                  - !Sub >-
                    arn:aws:glue:${AWS::Region}:${AWS::AccountId}:database/${GlueDB}
                  - !Sub >-
                    arn:aws:glue:${AWS::Region}:${AWS::AccountId}:table/${GlueDB}/*
                  - !Sub 'arn:aws:glue:${AWS::Region}:${AWS::AccountId}:catalog'
              - Sid: cwlog
                Effect: Allow
                Action: 'logs:*'
                Resource:
                  - !Sub >-
                    arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws-glue/*
    Metadata:
      'AWS::CloudFormation::Designer':
        id: a5a07eac-d8f9-422a-9a44-f31d67f60a5e
  MyStepFunction:
    Type: 'AWS::StepFunctions::StateMachine'
    Properties:
      TracingConfiguration:
        Enabled: true
      RoleArn: !GetAtt 
        - StepFunctionRole
        - Arn
      DefinitionString: !Sub |
        {
            "Comment": "A HELLO World example of the Amazon States Language using Pass states...",
            "StartAt": "Validate input csv",
            "States": {
                "Validate input csv": {
                    "Type": "Task",
                    "Resource": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${InputValidationFunction}",
                    "Next": "Validation Success?",
                    "ResultPath": "$.taskresult"
                },
                "Validation Success?": {
                    "Type": "Choice",
                    "Choices": [
                        {
                            "Variable": "$.taskresult.Validation",
                            "StringEquals": "SUCCESS",
                            "Next": "Start Crawler For Raw File"
                        },
                        {
                            "Variable": "$.taskresult.Validation",
                            "StringEquals": "FAILURE",
                            "Next": "FAIL - Move file to error folder"
                        }
                    ]
                },
                "FAIL - Move file to error folder": {
                    "Type": "Task",
                    "Next": "Error Notification",
                    "Resource": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${ArchiveFunction}"
                },
                "Error Notification": {
                    "Type": "Task",
                    "Resource": "arn:aws:states:::aws-sdk:sns:publish",
                    "Parameters": {
                           "Message.$": "$",
                           "TopicArn": "${SNSTopic}"
                    },
                    "Next": "Fail"
                },
                "Start Crawler For Raw File": {
                    "Type": "Task",
                    "ResultPath": "$.taskresult",
                    "ResultSelector": {
                        "cnt": "0",
                        "crawler_name": "${CrawlRawFile}"
                    },
                    "Resource": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${StartCrawlerFunction}",
                    "Parameters": {
                        "Crawler_Name": "${CrawlRawFile}"
                    },
                    "Retry": [
                        {
                            "ErrorEquals": [
                                "CrawlerRunningException"
                            ],
                            "IntervalSeconds": 10,
                            "MaxAttempts": 10,
                            "BackoffRate": 2
                        }
                    ],
                    "Catch": [
                        {
                            "ErrorEquals": [
                                "CrawlerRunningException"
                            ],
                            "Comment": "Crawler is running for long time",
                            "Next": "FAIL - Move file to error folder"
                        },
                        {
                            "ErrorEquals": [
                                "States.ALL"
                            ],
                            "Comment": "Error fall back",
                            "ResultPath": "$.error-info",
                            "Next": "FAIL - Move file to error folder"
                        }
                    ],
                    "Next": "Raw File Crawler Status Check"
                },
                "Raw File Crawler Status Check": {
                    "Type": "Task",
                    "InputPath": "$.taskresult",
                    "Resource": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${CrawlerStatusCheckFunction}",
                    "Next": "Raw File Crawler Finished?",
                    "ResultPath": "$.taskresult"
                },
                "Raw File Crawler Finished?": {
                    "Type": "Choice",
                    "Choices": [
                        {
                            "Or": [
                                {
                                    "Variable": "$.taskresult.Status",
                                    "StringEquals": "STOPPING"
                                },
                                {
                                    "Variable": "$.taskresult.Status",
                                    "StringEquals": "RUNNING"
                                }
                            ],
                            "Next": "Raw File Crawler Wait"
                        },
                        {
                            "Variable": "$.taskresult.Status",
                            "StringEquals": "READY",
                            "Next": "Run Glue Job"
                        },
                        {
                            "Variable": "$.taskresult.Status",
                            "StringEquals": "RETRYLIMITREACH",
                            "Next": "FAIL - Move file to error folder"
                        },
                        {
                            "Variable": "$.taskresult.Status",
                            "StringEquals": "FAILED",
                            "Next": "FAIL - Move file to error folder"
                        }
                    ],
                    "Default": "FAIL - Move file to error folder"
                },
                "Raw File Crawler Wait": {
                    "Type": "Wait",
                    "Seconds": 30,
                    "Next": "Raw File Crawler Status Check"
                },
                "Run Glue Job": {
                    "Type": "Task",
                    "Next": "Start Crawler For Partitioned File",
                    "ResultPath": null,
                    "Resource": "arn:aws:states:::glue:startJobRun.sync",
                    "Parameters": {
                        "JobName": "${GlueJob}"
                    },
                "Catch": [
                        {
                            "ErrorEquals": [
                                "States.ALL"
                            ],
                            "Comment": "Error fall back for glue job",
                            "ResultPath": "$.error-info",
                            "Next": "FAIL - Move file to error folder"
                        }
                    ]
                },
                "Start Crawler For Partitioned File": {
                    "Type": "Task",
                    "ResultPath": "$.taskresult",
                    "ResultSelector": {
                        "cnt": "0",
                        "crawler_name": "${CrawlPartitionedFile}"
                    },
                    "Resource": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${StartCrawlerFunction}",
                    "Parameters": {
                        "Crawler_Name": "${CrawlPartitionedFile}"
                    },
                    "Retry": [
                        {
                            "ErrorEquals": [
                                "CrawlerRunningException"
                            ],
                            "IntervalSeconds": 10,
                            "MaxAttempts": 10,
                            "BackoffRate": 2
                        }
                    ],
                    "Catch": [
                        {
                            "ErrorEquals": [
                                "CrawlerRunningException"
                            ],
                            "Comment": "Crawler is running for long time",
                            "Next": "FAIL - Move file to error folder"
                        },
                        {
                            "ErrorEquals": [
                                "States.ALL"
                            ],
                            "Comment": "Error fall back",
                            "ResultPath": "$.error-info",
                            "Next": "FAIL - Move file to error folder"
                        }
                    ],
                    "Next": "Partitioned File Crawler Status Check"
                },
                "Partitioned File Crawler Status Check": {
                    "Type": "Task",
                    "InputPath": "$.taskresult",
                    "Resource": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${CrawlerStatusCheckFunction}",
                    "Next": "Partitioned File Crawler Finished?",
                    "ResultPath": "$.taskresult"
                },
                "Partitioned File Crawler Finished?": {
                    "Type": "Choice",
                    "Choices": [
                        {
                            "Or": [
                                {
                                    "Variable": "$.taskresult.Status",
                                    "StringEquals": "STOPPING"
                                },
                                {
                                    "Variable": "$.taskresult.Status",
                                    "StringEquals": "RUNNING"
                                }
                            ],
                            "Next": "Partitioned File Crawler Wait"
                        },
                        {
                            "Variable": "$.taskresult.Status",
                            "StringEquals": "READY",
                            "Next": "Move file to archive"
                        },
                        {
                            "Variable": "$.taskresult.Status",
                            "StringEquals": "RETRYLIMITREACH",
                            "Next": "FAIL - Move file to error folder"
                        },
                        {
                            "Variable": "$.taskresult.Status",
                            "StringEquals": "FAILED",
                            "Next": "FAIL - Move file to error folder"
                        }
                    ],
                    "Default": "FAIL - Move file to error folder"
                },
                "Partitioned File Crawler Wait": {
                    "Type": "Wait",
                    "Seconds": 30,
                    "Next": "Partitioned File Crawler Status Check"
                },
                "Fail": {
                    "Type": "Fail",
                    "Cause": "validation failed",
                    "Error": "ValidationError"
                },
                "Move file to archive": {
                    "Type": "Task",
                    "Resource": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${ArchiveFunction}",
                    "Next": "Success Notification"
                },
                "Success Notification": {
                    "Type": "Task",
                    "Resource": "arn:aws:states:::aws-sdk:sns:publish",
                    "Parameters": {
                           "Message.$": "$",
                           "TopicArn": "${SNSTopic}"
                    },
                    "End": true
                }
            }
        }
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 2a323e8f-e4cf-4c69-a221-09b8ac248ef8
  GlueJob:
    Type: 'AWS::Glue::Job'
    Properties:
      Command:
        Name: glueetl
        ScriptLocation: !Sub 's3://${pS3BucketName}/glue/gluejob.py'
      DefaultArguments:
        '--enable-auto-scaling': 'true'
        '--job-bookmark-option': job-bookmark-enable
      ExecutionProperty:
        MaxConcurrentRuns: 20
      MaxRetries: 0
      Role: !Ref GlueRole
      GlueVersion: '3.0'
      NumberOfWorkers: 100
      WorkerType: G.1X
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 45fdc734-4c38-412b-94aa-7a1da29ecdc1
  CrawlRawFile:
    Type: 'AWS::Glue::Crawler'
    Properties:
      Role: !Ref GlueRole
      Description: Crawler to generate the schema of the raw file
      SchemaChangePolicy:
        UpdateBehavior: UPDATE_IN_DATABASE
        DeleteBehavior: DELETE_FROM_DATABASE
      DatabaseName: !Ref GlueDB
      Targets:
        S3Targets:
          - Path: !Sub 's3://${pS3BucketName}/${pStageFolder}'
      Configuration: >-
        {"Version":1.0,"Grouping":{"TableGroupingPolicy":"CombineCompatibleSchemas"}}
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 1139df32-4cf4-45d6-9c4f-4ced88b40d50
  CrawlPartitionedFile:
    Type: 'AWS::Glue::Crawler'
    Properties:
      Role: !Ref GlueRole
      Description: Crawler to generate the schema of the partitioned file
      SchemaChangePolicy:
        UpdateBehavior: UPDATE_IN_DATABASE
        DeleteBehavior: DELETE_FROM_DATABASE
      DatabaseName: !Ref GlueDB
      Targets:
        S3Targets:
          - Path: !Sub 's3://${pS3BucketName}/${pTransformFolder}'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: c99e00f5-7a70-4a5b-ba70-5276a23220ee
  LambdaLayer:
    Type: 'AWS::Serverless::LayerVersion'
    Properties:
      LayerName: cfnresource-lib
      Description: My layer
      ContentUri: ./myLayer
      CompatibleRuntimes:
        - python3.9
        - python3.8
        - python3.7
      LicenseInfo: MIT
    Metadata:
      'AWS::CloudFormation::Designer':
        id: f94254b9-1f52-48c1-90d8-b87144a6c45a
Outputs:
  GlueDBOutput:
    Description: GlueDB Name
    Value: !Ref GlueDB
Metadata:
  'AWS::CloudFormation::Designer':
    f94254b9-1f52-48c1-90d8-b87144a6c45a:
      size:
        width: 60
        height: 60
      position:
        x: -10
        'y': 160
      z: 1
      embeds: []
    a5a07eac-d8f9-422a-9a44-f31d67f60a5e:
      size:
        width: 60
        height: 60
      position:
        x: 180
        'y': 90
      z: 1
      embeds: []
    45fdc734-4c38-412b-94aa-7a1da29ecdc1:
      size:
        width: 60
        height: 60
      position:
        x: 60
        'y': 210
      z: 1
      embeds: []
    4b3489be-ced1-4395-9a2b-429eacc97834:
      size:
        width: 60
        height: 60
      position:
        x: 180
        'y': 210
      z: 1
      embeds: []
    c99e00f5-7a70-4a5b-ba70-5276a23220ee:
      size:
        width: 60
        height: 60
      position:
        x: 300
        'y': 90
      z: 1
      embeds: []
    1139df32-4cf4-45d6-9c4f-4ced88b40d50:
      size:
        width: 60
        height: 60
      position:
        x: 300
        'y': 210
      z: 1
      embeds: []
    57498066-3446-4abd-af96-b433e2016528:
      size:
        width: 60
        height: 60
      position:
        x: 60
        'y': 330
      z: 1
      embeds: []
    346ac6a8-763f-4f9a-ac3d-de0e617b13e4:
      size:
        width: 60
        height: 60
      position:
        x: 180
        'y': 330
      z: 1
      embeds: []
      isassociatedwith:
        - 57498066-3446-4abd-af96-b433e2016528
    6d4d9d36-d003-4cb7-b2c6-6b29cbf45594:
      size:
        width: 60
        height: 60
      position:
        x: 300
        'y': 330
      z: 1
      embeds: []
    196da25b-5faf-4a7b-9975-09919e0e6f36:
      size:
        width: 60
        height: 60
      position:
        x: 420
        'y': 90
      z: 1
      embeds: []
      isassociatedwith:
        - 6d4d9d36-d003-4cb7-b2c6-6b29cbf45594
    9a53e28d-ffd3-4fe9-891e-20a40e64778e:
      size:
        width: 60
        height: 60
      position:
        x: 420
        'y': 210
      z: 1
      embeds: []
    b39e4721-c7ce-46a9-ba47-3909c12c342a:
      size:
        width: 60
        height: 60
      position:
        x: 420
        'y': 330
      z: 1
      embeds: []
    616b600e-5020-43dc-ba46-eedceca53caa:
      size:
        width: 60
        height: 60
      position:
        x: 60
        'y': 450
      z: 1
      embeds: []
    d7dcc3ae-4e36-4260-80b0-82955697d4c8:
      size:
        width: 60
        height: 60
      position:
        x: 180
        'y': 450
      z: 1
      embeds: []
    bf752319-8822-4281-b3d4-817e6d1058d5:
      size:
        width: 60
        height: 60
      position:
        x: 300
        'y': 450
      z: 1
      embeds: []
      isassociatedwith:
        - d7dcc3ae-4e36-4260-80b0-82955697d4c8
    3e4daeaf-f4b1-4d15-a9c5-f3ed309d83e4:
      size:
        width: 60
        height: 60
      position:
        x: 420
        'y': 450
      z: 1
      embeds: []
    cecea679-8bdd-4b33-aeed-86de4da5422f:
      size:
        width: 60
        height: 60
      position:
        x: 540
        'y': 90
      z: 1
      embeds: []
    37faf19a-38c3-45fe-ab3a-c2625636873a:
      size:
        width: 60
        height: 60
      position:
        x: 540
        'y': 210
      z: 1
      embeds: []
    872d7d4c-81a4-4b96-aa60-028cf0f92536:
      size:
        width: 60
        height: 60
      position:
        x: 540
        'y': 330
      z: 1
      embeds: []
    49d00aab-19aa-4398-a297-340a626d036e:
      size:
        width: 60
        height: 60
      position:
        x: 540
        'y': 450
      z: 1
      embeds: []
    06484aa0-df7c-4229-a963-f19580762f69:
      size:
        width: 60
        height: 60
      position:
        x: 60
        'y': 570
      z: 1
      embeds: []
      dependson:
        - b39e4721-c7ce-46a9-ba47-3909c12c342a
    786c8034-5ead-4ec2-a145-f71d7b0e0783:
      size:
        width: 60
        height: 60
      position:
        x: 180
        'y': 570
      z: 1
      embeds: []
      dependson:
        - 06484aa0-df7c-4229-a963-f19580762f69
    d2cacdb5-8683-4839-a900-8edf1206dda7:
      size:
        width: 60
        height: 60
      position:
        x: 300
        'y': 570
      z: 1
      embeds: []
    6757492b-e2f7-4fc8-a318-bdfac377e26d:
      size:
        width: 60
        height: 60
      position:
        x: 420
        'y': 570
      z: 1
      embeds: []
      isassociatedwith:
        - d2cacdb5-8683-4839-a900-8edf1206dda7
    2a323e8f-e4cf-4c69-a221-09b8ac248ef8:
      size:
        width: 60
        height: 60
      position:
        x: 540
        'y': 570
      z: 1
      embeds: []
    9649cb2b-92ac-4b69-82d7-b95ee87aaafa:
      size:
        width: 60
        height: 60
      position:
        x: 660
        'y': 90
      z: 1
      embeds: []
    42cbb679-fff9-4ac2-b616-e391c72d68b1:
      size:
        width: 60
        height: 60
      position:
        x: 660
        'y': 210
      z: 1
      embeds: []
    f26dc285-b2c4-4306-a825-ed152eeea85b:
      size:
        width: 60
        height: 60
      position:
        x: 660
        'y': 330
      z: 1
      embeds: []
    bbbd6046-ae88-4e7a-b2df-bd92935ec35d:
      size:
        width: 60
        height: 60
      position:
        x: 660
        'y': 450
      z: 1
      embeds: []
